version: '3.5'

services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - backend
    restart: unless-stopped

  redis:
    container_name: redis_container
    image: redis
    volumes:
      - redis:/data
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - backend

  ssoserver:
    container_name: sso-server
    build: 
      context: sso-server
      dockerfile: Dockerfile
    environment:
      PORT: 8080
      DATABASE_URL: postgresql://admin:password@postgres:5432
      REDIS_URL: redis
      REDIS_PORT: 6379
      JWT_SECRET_KEY: 'JWTSECRETKEY'
    ports:
      - "8080:8080"
    volumes:
      - "./sso-server:/code"
    depends_on:
      - "postgres"
      - "redis"
    networks:
      - backend

  modelserver:
    container_name: model-server
    build:
      context: models/base-models
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - models:/usr/share/nginx/html/models

networks:
  backend:
    driver: bridge

volumes:
  postgres:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./temp/postgres
  redis:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./temp/redis
  models:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./temp/modelsvr
